#cloud-config

manage_etc_hosts: localhost

users:
  - default
  - name: etcd
    gecos: etcd runtime user
    lock_passwd: true
    system: true
    shell: /bin/false

write_files:
  - content: |
      #!/bin/bash
      NODE_IP="$(ip addr sh dev $(ip r | grep default | awk '{ print $5 }') | grep "inet\b" | awk '{ print $2 }' | cut -d '/' -f 1)"
      mkdir -p /etc/systemd/system/etcd.service.d/
      cat > /etc/systemd/system/etcd.service.d/environment.conf<<EOF
      [Service]
      Environment="ETCD_INITIAL_CLUSTER_TOKEN=${etcd_token}"
      Environment="ETCD_DATA_DIR=/var/lib/etcd"
      Environment="ETCD_DISCOVERY_SRV=automium.consul"
      Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=http://$NODE_IP:2380"
      Environment="ETCD_LISTEN_PEER_URLS=http://$NODE_IP:2380"
      Environment="ETCD_LISTEN_CLIENT_URLS=http://$NODE_IP:2379,http://127.0.0.1:2379"
      Environment="ETCD_ADVERTISE_CLIENT_URLS=http://$NODE_IP:2379"
      EOF
      chmod 0644 /etc/systemd/system/etcd.service.d/environment.conf
    path: /tmp/setup-etcd.sh
    permission: 0755
  - content: |
      [Unit]
      Description=etcd key-value store
      Documentation=https://github.com/coreos/etcd

      [Service]
      User=etcd
      Type=notify
      ExecStart=/usr/local/bin/etcd
      Restart=always
      RestartSec=10s
      LimitNOFILE=40000

      [Install]
      WantedBy=multi-user.target
    path: /etc/systemd/system/etcd.service
    permission: 0644

  - content: |
      - name: prepare consul
        hosts: 127.0.0.1
        pre_tasks:
          - name: stop consul
            service: name=consul state=stopped
          - name: clean /opt/consul/data/serf/local.keyring
            file: path=/opt/consul/data/serf/local.keyring state=absent
        roles:
          - role: entercloudsuite.consul
            consul_config_validate: "{{ consul_user_home }}/bin/consul validate -config-format=json %s"
            consul_configs:
              main:
                bind_addr: "{{ ansible_default_ipv4['address'] }}"
                client_addr: 0.0.0.0
                node_name: "{{ ansible_hostname }}"
                data_dir: "{{ consul_data_dir }}"
                encrypt: "${consul_encrypt}"
                datacenter: "${consul_datacenter}"
                enable_syslog: true
                server: false
                ui: true
                enable_script_checks: true
                services:
                  - name: "${name}"
                  - name: "exporter_node"
                    port: 9100
                rejoin_after_leave: true
                retry_join:
                  - "${consul}"
    path: /usr/src/cloud/playbook.yml
    permissions: '0755'

runcmd:
  - mkdir /var/lib/etcd && chown etcd:etcd /var/lib/etcd
  - /bin/bash /tmp/setup-etcd.sh
  - rm /tmp/setup-etcd.sh
  - systemctl daemon-reload
  - systemctl enable etcd
  - systemctl start etcd
  - |
      bash <<'EOF'
      export COMPLETED=false
      while [ "$COMPLETED" == "false" ]; do
        (
          apt-get update || true
          apt-get install python-pip -y || true
          set -e errexit
          set -o pipefail
          # workaround https://github.com/ansible/ansible/issues/21562
          export HOME=/root
          cd /usr/src/cloud
          source venv/bin/activate
          ansible-playbook -e ansible_python_interpreter=/usr/bin/python --connection=local playbook.yml
        ) >> /var/log/cloud-scripts.log 2>&1
        if [ $? == 0 ]; then
          COMPLETED=true
        fi
        sleep 1
      done
      EOF
